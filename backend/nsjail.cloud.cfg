name: "python_sandbox_prod"
mode: ONCE
hostname: "sandbox"
log_level: ERROR

# Sandbox config
cwd: "/sandbox/tmp"

# Security settings
clone_newnet: true
clone_newuser: true
clone_newns: true
clone_newpid: true
clone_newipc: true
clone_newuts: true
clone_newcgroup: true

# Resource limits
time_limit: 10
max_cpus: 1
rlimit_as: 256
rlimit_fsize: 10
rlimit_nofile: 32

# Environment variables
envar: "HOME=/sandbox"
envar: "LD_LIBRARY_PATH=/usr/local/lib"
envar: "PYTHONPATH=/usr/local/lib/python3.11/site-packages"

# Disable readline for security
disable_rl: true

# Mount Python binary and libraries
mount {
  src: "/usr/local/bin/python3"
  dst: "/usr/local/bin/python3"
  is_bind: true
  rw: false
}

mount {
  src: "/usr/local/lib/python3.11"
  dst: "/usr/local/lib/python3.11"
  is_bind: true
  rw: false
}

mount {
  src: "/usr/local/lib/python3.11/lib-dynload"
  dst: "/usr/local/lib/python3.11/lib-dynload"
  is_bind: true
  rw: false
}

mount {
  src: "/usr/local/lib/libpython3.11.so.1.0"
  dst: "/usr/local/lib/libpython3.11.so.1.0"
  is_bind: true
  rw: false
}

# Essential system libraries
mount {
  src: "/lib/x86_64-linux-gnu/libc.so.6"
  dst: "/lib/x86_64-linux-gnu/libc.so.6"
  is_bind: true
  rw: false
}

mount {
  src: "/lib/x86_64-linux-gnu/libm.so.6"
  dst: "/lib/x86_64-linux-gnu/libm.so.6"
  is_bind: true
  rw: false
}

mount {
  src: "/lib64/ld-linux-x86-64.so.2"
  dst: "/lib64/ld-linux-x86-64.so.2"
  is_bind: true
  rw: false
}

mount {
  src: "/usr/lib/x86_64-linux-gnu/libstdc++.so.6"
  dst: "/usr/lib/x86_64-linux-gnu/libstdc++.so.6"
  is_bind: true
  rw: false
}

mount {
  src: "/lib/x86_64-linux-gnu/libz.so.1"
  dst: "/lib/x86_64-linux-gnu/libz.so.1"
  is_bind: true
  rw: false
}

mount {
  src: "/lib/x86_64-linux-gnu/libgcc_s.so.1"
  dst: "/lib/x86_64-linux-gnu/libgcc_s.so.1"
  is_bind: true
  rw: false
}

mount {
  src: "/lib/x86_64-linux-gnu/libpthread.so.0"
  dst: "/lib/x86_64-linux-gnu/libpthread.so.0"
  is_bind: true
  rw: false
}

mount {
  src: "/usr/lib/x86_64-linux-gnu/libffi.so.8"
  dst: "/usr/lib/x86_64-linux-gnu/libffi.so.8"
  is_bind: true
  rw: false
}

# Python packages
mount {
  src: "/usr/local/lib/python3.11/site-packages"
  dst: "/usr/local/lib/python3.11/site-packages"
  is_bind: true
  rw: false
}

# Script mount
mount {
  src: "/sandbox/tmp/script.py"
  dst: "/sandbox/tmp/script.py"
  is_bind: true
  rw: true
}

# Execution binary and arguments
exec_bin {
  path: "/usr/local/bin/python3"
  arg: "python3"
  arg: "/sandbox/tmp/script.py"
}

# Security policies
seccomp_string: "KILL { chmod, fchmod, fchmodat, chown, fchown, lchown, setuid, setgid, setreuid, setregid, setresuid, setresgid, setfsuid, setfsgid, setgroups, mount, umount, ptrace, prctl, personality, setns, unshare, clone, fork, vfork, execve, execveat, open, openat, creat, open_by_handle_at, name_to_handle_at, faccessat, faccessat2, chmod, fchmod, fchmodat, chown, fchown, lchown, fchownat, link, linkat, symlink, symlinkat, unlink, unlinkat, rename, renameat, renameat2, readlink, readlinkat, truncate, ftruncate, mkdir, mkdirat, rmdir, mknod, mknodat, pipe, pipe2, dup, dup2, dup3, getdents, getdents64, getcwd, chdir, fchdir, pivot_root, chroot, acct, settimeofday, stime, adjtimex, clock_adjtime, clock_settime, timer_create, timer_settime, timer_delete, timer_getoverrun, timer_gettime, timerfd_create, timerfd_settime, timerfd_gettime, eventfd, eventfd2, signalfd, signalfd4, inotify_init, inotify_init1, inotify_add_watch, inotify_rm_watch, userfaultfd, memfd_create, bpf, kexec_load, kexec_file_load, finit_module, delete_module, init_module, perf_event_open, fanotify_init, fanotify_mark, lookup_dcookie, name_to_handle_at, open_by_handle_at, clock_adjtime, syncfs, setns, process_vm_readv, process_vm_writev, kcmp, finit_module, kexec_load, kexec_file_load, bpf, userfaultfd, memfd_create, copy_file_range, preadv2, pwritev2, pkey_mprotect, pkey_alloc, pkey_free, statx, io_pgetevents, rseq, pidfd_send_signal, io_uring_setup, io_uring_enter, io_uring_register, openat2, pidfd_getfd, faccessat2, process_madvise, epoll_pwait2, mount_setattr, landlock_create_ruleset, landlock_add_rule, landlock_restrict_self, memfd_secret, process_mrelease, futex_waitv, set_mempolicy_home_node } DEFAULT ALLOW"